(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{54:function(t,s,a){"use strict";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"sass-的基础语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-的基础语法","aria-hidden":"true"}},[t._v("#")]),t._v(" Sass 的基础语法")]),a("ul",[a("li",[t._v("变量")]),a("li",[t._v("嵌套")]),a("li",[t._v("混合宏")]),a("li",[t._v("扩展/继承")]),a("li",[t._v("占位符")])]),a("h2",{attrs:{id:"sass-普通变量与默认变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-普通变量与默认变量","aria-hidden":"true"}},[t._v("#")]),t._v(" [Sass]普通变量与默认变量")]),a("ol",[a("li",[t._v("普通变量：定义之后可以在全局范围内使用。")])]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$fontSize")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 12px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v("body")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("font-size")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token variable"}},[t._v("$fontSize")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("pre",[a("code",[t._v("编译后的 css 代码：\n")])]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v("body")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("font-size")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("12px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[t._v("默认变量")]),a("p",[t._v("sass 的默认变量仅需要在值后面加上 "),a("span",{staticStyle:{color:"blue"}},[t._v(" !default ")]),t._v("即可。")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$baseLineHeight")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.5 "),a("span",{attrs:{class:"token statement keyword"}},[t._v("!default")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v("body")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("line-height")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$baseLineHeight")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("编译后的 css 代码：")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v("body")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("line-height")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.5"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("sass 的默认变量一般是用来设置默认值，然后根据需求来覆盖的，覆盖的方式也很简单，只需要在默认变量之前重新声明下变量即可。")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$baseLineHeight")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$baseLineHeight")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1.5 "),a("span",{attrs:{class:"token statement keyword"}},[t._v("!default")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{attrs:{class:"token selector"}},[t._v("body")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t    "),a("span",{attrs:{class:"token property"}},[t._v("line-height")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$baseLineHeight")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("编译后的css代码：")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token selector"}},[t._v("body")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t    "),a("span",{attrs:{class:"token property"}},[t._v("line-height")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("2"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("可以看出现在编译后的 line-height 为 2，而不是我们默认的 1.5。默认变量的价值在进行组件化开发的时候会非常有用。")])])]),a("h2",{attrs:{id:"sass-局部变量和全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-局部变量和全局变量","aria-hidden":"true"}},[t._v("#")]),t._v(" [Sass]局部变量和全局变量")]),a("p",[t._v("Sass 中变量的作用域在过去几年已经发生了一些改变。直到最近，规则集和其他范围内声明变量的作用域才默认为本地。如果已经存在同名的全局变量，从 3.4 版本开始，Sass 已经可以正确处理作用域的概念，并通过创建一个新的局部变量来代替。")]),a("p",[t._v("先来看一下代码例子：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$color")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orange "),a("span",{attrs:{class:"token statement keyword"}},[t._v("!default")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//定义全局变量(在选择器、函数、混合宏...的外面定义的变量为全局变量)")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".block ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//调用全局变量")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v("em ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$color")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//定义局部变量")]),t._v("\n      "),a("span",{attrs:{class:"token selector"}},[t._v("a ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//调用局部变量")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v("span ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//调用全局变量")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("css 的结果：")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{attrs:{class:"token selector"}},[t._v(".block")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orange"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token selector"}},[t._v("em a")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token selector"}},[t._v("span")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orange"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("上面的示例演示可以得知，在元素内部定义的变量不会影响其他元素。如此可以简单的理解成，全局变量就是定义在元素外面的变量，如下代码：")]),a("pre",[a("code",[t._v("$color:orange !default;\n")])]),a("p",[t._v("$color 就是一个全局变量，而定义在元素内部的变量，比如 $color:red; 是一个局部变量。")]),a("p",[t._v("除此之外，Sass 现在还提供一个 !global 参数。!global 和 !default 对于定义变量都是很有帮助的。我们之后将会详细介绍这两个参数的使用以及其功能。")]),a("h2",{attrs:{id:"全局变量的影子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局变量的影子","aria-hidden":"true"}},[t._v("#")]),t._v(" 全局变量的影子")]),a("p",[t._v("当在局部范围（选择器内、函数内、混合宏内...）声明一个已经存在于全局范围内的变量时，局部变量就成为了全局变量的影子。基本上，局部变量只会在局部范围内覆盖全局变量。")]),a("p",[t._v("上面例子中的 em 选择器内的变量 $color 就是一个全局变量的影子。")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$color")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orange "),a("span",{attrs:{class:"token statement keyword"}},[t._v("!default")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//定义全局变量")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".block ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//调用全局变量")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v("em ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$color")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//定义局部变量（全局变量 $color 的影子）")]),t._v("\n      "),a("span",{attrs:{class:"token selector"}},[t._v("a ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//调用局部变量")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("h2",{attrs:{id:"什么时候声明变量？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么时候声明变量？","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么时候声明变量？")]),a("p",[t._v("建议：创建变量只适用于感觉确有必要的情况下。不要为了某些hack行为而声明新变量，这丝毫没有作用。只有满足所有下述标准时方可创建新变量：")]),a("ul",[a("li",[t._v("该值至少重复出现了两次(有必要提取出来)；")]),a("li",[t._v("该值至少可能会被更新一次；")]),a("li",[t._v("该值所有的表现都与变量有关（非巧合）。")])]),a("p",[t._v("基本上，没有理由声明一个永远不需要更新或者只在单一地方使用变量。")]),a("p",[a("span",{staticStyle:{color:"darkred"}},[t._v("温馨小提示：您在学习 sass 时，除了在我们网页上可以做练习，还有一个便利在线编辑器网址如下：http://sassmeister.com/")])]),a("h2",{attrs:{id:"sass-嵌套"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-嵌套","aria-hidden":"true"}},[t._v("#")]),t._v(" [Sass]嵌套")]),a("p",[t._v("Sass 中还提供了选择器嵌套功能，但这也并不意味着你在 Sass 中的嵌套是无节制的，因为你嵌套的层级越深，编译出来的 CSS 代码的选择器层级将越深，这往往是大家不愿意看到的一点。这个特性现在正被众多开发者滥用。")]),a("p",[t._v("选择器嵌套为样式表的作者提供了一个通过局部选择器相互嵌套实现全局选择的方法，Sass 的嵌套分为三种：")]),a("ul",[a("li",[t._v("选择器嵌套")]),a("li",[t._v("属性嵌套")]),a("li",[t._v("伪类嵌套")])]),a("h3",{attrs:{id:"选择器嵌套"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择器嵌套","aria-hidden":"true"}},[t._v("#")]),t._v(" 选择器嵌套")]),a("p",[t._v("假设我们有一段这样的结构：")]),a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("header")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("nav")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("“##”")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Home"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("“##”")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("About"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("“##”")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Blog"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("nav")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("header")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),a("p",[t._v("想选中 header 中的 a 标签，在写 CSS 会这样写：")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v("nav a")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token selector"}},[t._v("header nav a")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("green"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("那么在 Sass 中，就可以使用选择器的嵌套来实现：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v("nav ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token selector"}},[t._v("a ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token selector"}},[t._v("header "),a("span",{attrs:{class:"token parent important"}},[t._v("&")]),t._v(" ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("green"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[a("span",{staticStyle:{color:"darkred"}},[t._v("注：&是父选择器的标识符")])]),a("h3",{attrs:{id:"属性嵌套"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性嵌套","aria-hidden":"true"}},[t._v("#")]),t._v(" 属性嵌套")]),a("p",[t._v("Sass 中还提供属性嵌套，CSS 有一些属性前缀相同，只是后缀不一样，比如：border-top/border-right，与这个类似的还有 margin、padding、font 等属性。假设你的样式中用到了：")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("border-top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid red"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("border-bottom")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid green"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("在 Sass 中我们可以这样写：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".box ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token selector"}},[t._v("border: ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{attrs:{class:"token property"}},[t._v("top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid red"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),a("span",{attrs:{class:"token property"}},[t._v("bottom")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid green"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("h3",{attrs:{id:"伪类嵌套"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪类嵌套","aria-hidden":"true"}},[t._v("#")]),t._v(" 伪类嵌套")]),a("p",[t._v("其实伪类嵌套和属性嵌套非常类似，只不过他需要借助"),a("code",[t._v("&")]),t._v("符号一起配合使用。我们就拿经典的“clearfix”为例吧：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".clearfix")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),a("span",{attrs:{class:"token selector"}},[a("span",{attrs:{class:"token parent important"}},[t._v("&")]),t._v(":before,\n    \t"),a("span",{attrs:{class:"token parent important"}},[t._v("&")]),t._v(":after ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t    "),a("span",{attrs:{class:"token property"}},[t._v("content")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token string"}},[t._v('""')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t    "),a("span",{attrs:{class:"token property"}},[t._v("display")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" table"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    \t"),a("span",{attrs:{class:"token selector"}},[a("span",{attrs:{class:"token parent important"}},[t._v("&")]),t._v(":after ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t    "),a("span",{attrs:{class:"token property"}},[t._v("clear")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("both"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t    "),a("span",{attrs:{class:"token property"}},[t._v("overflow")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("编译出来的 CSS：")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v("clearfix:before, .clearfix:after")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("content")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('""')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("display")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" table"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".clearfix:after")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("clear")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" both"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("overflow")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("h3",{attrs:{id:"避免选择器嵌套："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免选择器嵌套：","aria-hidden":"true"}},[t._v("#")]),t._v(" 避免选择器嵌套：")]),a("ul",[a("li",[t._v("选择器嵌套最大的问题是将使最终的代码难以阅读。开发者需要花费巨大精力计算不同缩进级别下的选择器具体的表现效果。")]),a("li",[t._v("选择器越具体则声明语句越冗长，而且对最近选择器的引用(&)也越频繁。在某些时候，出现混淆选择器路径和探索下一级选择器的错误率很高，这非常不值得。")])]),a("p",[t._v("为了防止此类情况，我们应该尽可能避免选择器嵌套。然而，显然只有少数情况适应这一措施。")]),a("h2",{attrs:{id:"sass-混合宏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-混合宏","aria-hidden":"true"}},[t._v("#")]),t._v(" [Sass]混合宏")]),a("ul",[a("li",[t._v("声明混合宏")]),a("li",[t._v("调用混合宏")]),a("li",[t._v("混合宏的参数")])]),a("h3",{attrs:{id:"声明混合宏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明混合宏","aria-hidden":"true"}},[t._v("#")]),t._v(" 声明混合宏")]),a("p",[a("b",[t._v("不带参数混合宏：")])]),a("p",[t._v("在 Sass 中，使用**"),a("code",[t._v("@mixin")]),t._v("**来声明一个混合宏。如：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token keyword"}},[t._v("@mixin")]),t._v(" "),a("span",{attrs:{class:"token selector"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("其中 @mixin 是用来声明混合宏的关键词；border-radius 是混合宏的名称；大括号里面是复用的样式代码。")]),a("p",[a("b",[t._v("带参数混合宏：")])]),a("p",[t._v("除了声明一个不带参数的混合宏之外，还可以在定义混合宏时带有参数，如：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token keyword"}},[t._v("@mixin")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$radius")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5px"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[a("b",[t._v("复杂的混合宏：")])]),a("p",[t._v("上面是一个简单的定义混合宏的方法，当然， Sass 中的混合宏还提供更为复杂的，你可以在大括号里面写上带有逻辑关系（如：@if...@else),如：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token keyword"}},[t._v("@mixin")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("box-shadow")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$shadow")]),t._v("..."),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@if")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("length")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$shadow")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token selector"}},[t._v(">= 1 ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("@include")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("prefixer")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("box-shadow, "),a("span",{attrs:{class:"token variable"}},[t._v("$shadow")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("@else")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$shadow")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0 0 4px "),a("span",{attrs:{class:"token function"}},[t._v("rgba")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0,0,0,.3"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("@include")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("prefixer")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("box-shadow, "),a("span",{attrs:{class:"token variable"}},[t._v("$shadow")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("这个 box-shadow 的混合宏，带有多个参数，这个时候可以使用“ … ”来替代。\n简单的解释一下，当 $shadow 的参数数量值大于或等于“ 1 ”时，表示有多个阴影值，反之调用默认的参数值“ 0 0 4px rgba(0,0,0,.3) ”。")]),a("h3",{attrs:{id:"调用混合宏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用混合宏","aria-hidden":"true"}},[t._v("#")]),t._v(" 调用混合宏")]),a("p",[t._v("在 Sass 中通过 @mixin 关键词声明了一个混合宏，在实际调用中，可以用关键词“@include”来调用声明好的混合宏。")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token keyword"}},[t._v("@mixin")]),t._v(" "),a("span",{attrs:{class:"token selector"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v("button ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@include")]),t._v(" border-radius"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("编译出来的 CSS:")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v("button")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("h3",{attrs:{id:"sass-混合宏的参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-混合宏的参数","aria-hidden":"true"}},[t._v("#")]),t._v(" [Sass]混合宏的参数")]),a("h4",{attrs:{id:"传一个不带值的参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传一个不带值的参数","aria-hidden":"true"}},[t._v("#")]),t._v(" 传一个不带值的参数")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token keyword"}},[t._v("@mixin")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("//调用")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".box ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@include")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("3px"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("h4",{attrs:{id:"传一个带值的参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传一个带值的参数","aria-hidden":"true"}},[t._v("#")]),t._v(" 传一个带值的参数")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("//在混合宏“border-radius”传了一个参数“$radius”，而且给这个参数赋予了一个默认值“3px”。")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("@mixin")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$radius")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3px"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("在调用类似这样的混合宏时，会多有一个机会，假设你的页面中的圆角很多地方都是“3px”的圆角，那么这个时候只需要调用默认的混合宏“border-radius”:")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".btn ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@include")]),t._v(" border-radius"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("编译出来的 CSS:")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".btn")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("但有的时候，页面中有些元素的圆角值不一样，那么可以随机给混合宏传值，如：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".box ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@include")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("50%"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("编译出来的 CSS:")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("-webkit-border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("h4",{attrs:{id:"传多个参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传多个参数","aria-hidden":"true"}},[t._v("#")]),t._v(" 传多个参数")]),a("p",[t._v("Sass 混合宏除了能传一个参数之外，还可以传多个参数，如：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token keyword"}},[t._v("@mixin")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("center")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$width")]),t._v(","),a("span",{attrs:{class:"token variable"}},[t._v("$height")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),a("span",{attrs:{class:"token property"}},[t._v("width")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$width")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{attrs:{class:"token property"}},[t._v("height")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$height")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{attrs:{class:"token property"}},[t._v("position")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{attrs:{class:"token property"}},[t._v("top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{attrs:{class:"token property"}},[t._v("left")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{attrs:{class:"token property"}},[t._v("margin-top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("-")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$height")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" 2"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{attrs:{class:"token property"}},[t._v("margin-left")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("-")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$width")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" 2"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("在混合宏“center”就传了多个参数。在实际调用和其调用其他混合宏是一样的：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".box-center ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),a("span",{attrs:{class:"token keyword"}},[t._v("@include")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("center")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("500px,300px"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("编译出来 CSS:")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".box-center")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),a("span",{attrs:{class:"token property"}},[t._v("width")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 500px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{attrs:{class:"token property"}},[t._v("height")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{attrs:{class:"token property"}},[t._v("position")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{attrs:{class:"token property"}},[t._v("top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{attrs:{class:"token property"}},[t._v("left")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{attrs:{class:"token property"}},[t._v("margin-top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" -150px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{attrs:{class:"token property"}},[t._v("margin-left")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" -250px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("有一个特别的参数“…”。当混合宏传的参数过多之时，可以使用参数来替代，如：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token keyword"}},[t._v("@mixin")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("box-shadow")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$shadows")]),t._v("..."),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@if")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("length")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$shadows")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token selector"}},[t._v(">= 1 ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token property"}},[t._v("box-shadow")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$shadows")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token keyword"}},[t._v("@else")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$shadows")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 0 2px "),a("span",{attrs:{class:"token function"}},[t._v("rgba")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("#000,.25"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{attrs:{class:"token property"}},[t._v("box-shadow")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$shadow")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("在实际调用中：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".box ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("@include")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("box-shadow")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0 0 1px "),a("span",{attrs:{class:"token function"}},[t._v("rgba")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("#000,.5"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(",0 0 2px "),a("span",{attrs:{class:"token function"}},[t._v("rgba")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("#000,.2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("编译出来的 CSS:")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("box-shadow")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 0 1px "),a("span",{attrs:{class:"token function"}},[t._v("rgba")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0, 0, 0, 0.5"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", 0 0 2px "),a("span",{attrs:{class:"token function"}},[t._v("rgba")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0, 0, 0, 0.2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("h3",{attrs:{id:"混合宏的不足"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#混合宏的不足","aria-hidden":"true"}},[t._v("#")]),t._v(" 混合宏的不足")]),a("p",[t._v("混合宏在实际编码中给我们带来很多方便之处，特别是对于复用重复代码块。但其最大的不足之处是会生成冗余的代码块(增大css文件大小)。比如在不同的地方调用一个相同的混合宏时。如：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token keyword"}},[t._v("@mixin")]),t._v(" "),a("span",{attrs:{class:"token selector"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".box ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@include")]),t._v(" border-radius"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("margin-bottom")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".btn ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@include")]),t._v(" border-radius"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("示例在“.box”和“.btn”中都调用了定义好的“border-radius”混合宏。先来看编译出来的 CSS：")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("margin-bottom")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".btn")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("border-radius")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("上例明显可以看出，Sass 在调用相同的混合宏时，并不能智能的将相同的样式代码块合并在一起。这也是 Sass 的混合宏最不足之处。")]),a("h2",{attrs:{id:"sass-扩展-继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-扩展-继承","aria-hidden":"true"}},[t._v("#")]),t._v(" [Sass]扩展/继承")]),a("p",[t._v("在 Sass 中是通过关键词 “@extend”来继承已存在的类样式块，从而实现代码的继承。如下所示：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".btn ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("border")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid #ccc"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("padding")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 6px 10px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("font-size")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 14px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".btn-primary ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("background-color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #f36"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #fff"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@extend")]),t._v(" .btn"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".btn-second ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("background-color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orange"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #fff"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@extend")]),t._v(" .btn"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("编译出来之后：")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".btn, .btn-primary, .btn-second")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("border")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid #ccc"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("padding")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 6px 10px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("font-size")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 14px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".btn-primary")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("background-color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #f36"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #fff"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".btn-second")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("background-clor")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orange"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #fff"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("从示例代码可以看出，在 Sass 中的继承，可以继承类样式块中所有样式代码，而且编译出来的 CSS 会将选择器合并在一起，形成组合选择器。")]),a("h2",{attrs:{id:"sass-占位符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-占位符","aria-hidden":"true"}},[t._v("#")]),t._v(" [Sass]占位符 %")]),a("p",[t._v("% 声明的代码，如果不被 @extend 调用的话，不会产生任何代码。来看一个演示：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[a("span",{attrs:{class:"token placeholder"}},[t._v("%mt5")]),t._v(" ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("margin-top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[a("span",{attrs:{class:"token placeholder"}},[t._v("%pt5")])]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("padding-top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("这段代码没有被 @extend 调用，他并没有产生任何代码块，只是静静的躺在你的某个 SCSS 文件中。只有通过 @extend 调用才会产生代码：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".btn ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("@extend")]),t._v(" "),a("span",{attrs:{class:"token placeholder selector"}},[t._v("%mt5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("@extend")]),t._v(" "),a("span",{attrs:{class:"token placeholder selector"}},[t._v("%pt5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".block ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("@extend")]),t._v(" "),a("span",{attrs:{class:"token placeholder selector"}},[t._v("%mt5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{attrs:{class:"token selector"}},[t._v("span ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@extend")]),t._v(" "),a("span",{attrs:{class:"token placeholder selector"}},[t._v("%pt5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("编译出来的 CSS")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".btn, .block")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("margin-top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".btn, .block span")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v("padding-top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("从编译出来的 CSS 代码可以看出，通过 @extend 调用的占位符，编译出来的代码会将相同的代码合并在一起。这也是我们希望看到的效果，也让你的代码变得更为干净。")]),a("h2",{attrs:{id:"sass-混合宏-vs-继承-vs-占位符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-混合宏-vs-继承-vs-占位符","aria-hidden":"true"}},[t._v("#")]),t._v(" [Sass]混合宏 VS 继承 VS 占位符")]),a("p",[t._v("初学者都常常纠结于这个问题“什么时候用混合宏，什么时候用继承，什么时候使用占位符？”其实他们各有各的优点与缺点：")]),a("p",[a("b",[t._v("a) Sass 中的混合宏使用")])]),a("ul",[a("li",[a("p",[t._v("混合宏不会自动合并相同的样式代码，如果在样式文件中调用同一个混合宏，会产生多个对应的样式代码，造成代码的冗余，这也是 CSSer 无法忍受的一件事情。不过他并不是一无事处，他可以传参数。")])]),a("li",[a("p",[t._v("个人建议：如果你的代码块中涉及到变量，建议使用混合宏来创建相同的代码块。")])])]),a("p",[a("b",[t._v("b) Sass 中继承")])]),a("ul",[a("li",[a("p",[t._v("使用继承后，编译出来的 CSS 会将使用继承的代码块合并到一起，通过组合选择器的方式向大家展现，比如 .mt, .block, .block span, .header。这样编译出来的代码相对于混合宏来说要干净的多，也是 CSSer 期望看到。但是他不能传变量参数。")])]),a("li",[a("p",[t._v("个人建议：如果你的代码块不需要专任何变量参数，而且有一个基类已在文件中存在，那么建议使用 Sass 的继承。")])])]),a("p",[a("b",[t._v("c) 占位符")])]),a("ul",[a("li",[t._v("编译出来的 CSS 代码和使用继承基本上是相同，只是不会在代码中生成占位符 mt 的选择器。那么占位符和继承的主要区别的，“占位符是独立定义，不调用的时候是不会在 CSS 中产生任何代码；继承是首先有一个基类存在，不管调用与不调用，基类的样式都将会出现在编译出来的 CSS 代码中。”")])]),a("h3",{attrs:{id:"sass-插值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-插值","aria-hidden":"true"}},[t._v("#")]),t._v(" [Sass]插值#{}")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$properties")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("margin, padding"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("@mixin")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("set-value")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$side")]),t._v(", "),a("span",{attrs:{class:"token variable"}},[t._v("$value")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@each")]),t._v(" "),a("span",{attrs:{class:"token selector"}},[a("span",{attrs:{class:"token variable"}},[t._v("$prop")]),t._v(" in "),a("span",{attrs:{class:"token variable"}},[t._v("$properties")]),t._v(" ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("#{$prop}")]),t._v("-"),a("span",{attrs:{class:"token variable"}},[t._v("#{$side}")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$value")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".login-box ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@include")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("set-value")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("top, 14px"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("编译成 CSS：")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".login-box")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("margin-top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 14px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("padding-top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 14px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("这是 Sass 插值中一个简单的实例。当你想设置属性值的时候你可以使用字符串插入进来。另一个有用的用法是构建一个选择器。可以这样使用：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token keyword"}},[t._v("@mixin")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("generate-sizes")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$class")]),t._v(", "),a("span",{attrs:{class:"token variable"}},[t._v("$small")]),t._v(", "),a("span",{attrs:{class:"token variable"}},[t._v("$medium")]),t._v(", "),a("span",{attrs:{class:"token variable"}},[t._v("$big")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token selector"}},[t._v("."),a("span",{attrs:{class:"token variable"}},[t._v("#{$class}")]),t._v("-small ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token property"}},[t._v("font-size")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$small")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{attrs:{class:"token selector"}},[t._v("."),a("span",{attrs:{class:"token variable"}},[t._v("#{$class}")]),t._v("-medium ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token property"}},[t._v("font-size")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$medium")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{attrs:{class:"token selector"}},[t._v("."),a("span",{attrs:{class:"token variable"}},[t._v("#{$class}")]),t._v("-big ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token property"}},[t._v("font-size")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$big")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("@include")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("generate-sizes")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"header-text"')]),t._v(", 12px, 20px, 40px"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("p",[t._v("编译出来的 CSS:")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".header-text-small")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token property"}},[t._v("font-size")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 12px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".header-text-medium")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token property"}},[t._v("font-size")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".header-text-big")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token property"}},[t._v("font-size")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 40px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("一旦你发现这一点，你就会想到超级酷的 mixins，用来生成代码或者生成另一个 mixins。然而，这并不完全是可能的。第一个限制，这很可能会删除用于 Sass 变量的插值。")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$margin-big")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 40px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$margin-medium")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$margin-small")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 12px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("@mixin")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("set-value")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$size")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("margin-top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$margin-")]),a("span",{attrs:{class:"token variable"}},[t._v("#{$size}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".login-box ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@include")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("set-value")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("big"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("上面的 Sass 代码编译出来，你会得到下面的信息：")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    error style.scss (Line 5: Undefined variable: “$margin-".)\n')])]),a("p",[t._v("所以，#{}语法并不是随处可用，你也不能在 mixin 中调用：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token keyword"}},[t._v("@mixin")]),t._v(" "),a("span",{attrs:{class:"token selector"}},[t._v("updated-status ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("margin-top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("background")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #F00"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$flag")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"status"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".navigation ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@include")]),t._v(" updated-"),a("span",{attrs:{class:"token variable"}},[t._v("#{$flag}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("上面的代码在编译成 CSS 时同样会报错：")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    error style.scss (Line 7: Invalid CSS after "...nclude updated-": expected "}", was "#{$flag};")\n')])]),a("p",[t._v("幸运的是，可以使用 @extend 中使用插值。例如：")]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[a("span",{attrs:{class:"token placeholder"}},[t._v("%updated-status")]),t._v(" ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("margin-top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("background")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #F00"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".selected-status ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("font-weight")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bold"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$flag")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"status"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".navigation ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@extend")]),t._v(" "),a("span",{attrs:{class:"token placeholder selector"}},[t._v("%updated-")]),a("span",{attrs:{class:"token variable"}},[t._v("#{$flag}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("@extend")]),t._v(" .selected-"),a("span",{attrs:{class:"token variable"}},[t._v("#{$flag}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("上面的 Sass 代码是可以运行的，可以动态的插入 .class 和 %placeholder。当然他们不能接受像 mixin 这样的参数，上面的代码编译出来的 CSS:")]),a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token selector"}},[t._v(".navigation")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("margin-top")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("background")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #F00"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token selector"}},[t._v(".selected-status, .navigation")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("font-weight")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bold"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("h3",{attrs:{id:"sass-注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-注释","aria-hidden":"true"}},[t._v("#")]),t._v(" [Sass]注释")]),a("ul",[a("li",[t._v("//    单行注释，标准编译和压缩编译后不会保留")]),a("li",[t._v("/* */ 多行注释 标准编译后会保留注释 压缩编译后不会保留")])]),a("h3",{attrs:{id:"sass-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" [Sass]数据类型")]),a("p",[t._v("Sass 和 JavaScript 语言类似，也具有自己的数据类型，在 Sass 中包含以下几种数据类型：")]),a("ul",[a("li",[t._v("数字: 如，1、 2、 13、 10px；")]),a("li",[t._v("字符串：有引号字符串或无引号字符串，如，\"foo\"、 'bar'、 baz；")]),a("li",[t._v("颜色：如，blue、 #04a3f9、 rgba(255,0,0,0.5)；")]),a("li",[t._v("布尔型：如，true、 false；")]),a("li",[t._v("空值：如，null；")]),a("li",[t._v("值列表：用空格或者逗号分开，如，1.5em 1em 0 2em 、 Helvetica, Arial, sans-serif。")])]),a("p",[t._v("SassScript 也支持其他 CSS 属性值（property value），比如 Unicode 范围，或 !important 声明。然而，Sass 不会特殊对待这些属性值，一律视为无引号字符串 (unquoted strings)。")]),a("p",[t._v("在编译 CSS 文件时不会改变其类型。只有一种情况例外，使用 #{ }插值语句 (interpolation) 时，有引号字符串将被编译为无引号字符串，这样方便了在混合指令 (mixin) 中引用选择器名。")]),a("p",[t._v("需要注意的是：当 deprecated = property syntax 时 （暂时不理解是怎样的情况），所有的字符串都将被编译为无引号字符串，不论是否使用了引号。")]),a("h3",{attrs:{id:"sass-列表函数（sass-list-functions）："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-列表函数（sass-list-functions）：","aria-hidden":"true"}},[t._v("#")]),t._v(" Sass 列表函数（Sass list functions）：")]),a("ul",[a("li",[t._v("nth 函数（nth function） 可以直接访问值列表中的某一项；")]),a("li",[t._v("join 函数（join function） 可以将多个值列表连结在一起；")]),a("li",[t._v("append 函数（append function） 可以在值列表中添加值；")]),a("li",[t._v("@each 规则（@each rule） 则能够给值列表中的每个项目添加样式。")]),a("li",[t._v("@for 循环遍历")]),a("li",[t._v("@while while循环")])]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 12.@for 有序循环语句")]),t._v("\n"),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$if_color")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" yellow"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$columns")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 6"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token selector"}},[t._v("section.s12 ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v("height")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v("background-color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$if_color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v("display")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block "),a("span",{attrs:{class:"token important"}},[t._v("!important")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token selector"}},[t._v("div ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// [through] 1-6")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("@for")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 1 "),a("span",{attrs:{class:"token keyword"}},[t._v("through")]),t._v(" "),a("span",{attrs:{class:"token selector"}},[a("span",{attrs:{class:"token variable"}},[t._v("$columns")]),t._v(" ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token selector"}},[t._v(".col-through-"),a("span",{attrs:{class:"token variable"}},[t._v("#{$i}")]),t._v(" ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("width")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100% "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$columns")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$i")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// [to] 1-5")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("@for")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token selector"}},[t._v("1 to "),a("span",{attrs:{class:"token variable"}},[t._v("$columns")]),t._v(" ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token selector"}},[t._v(".col-to-"),a("span",{attrs:{class:"token variable"}},[t._v("#{$i}")]),t._v(" ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("width")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100% "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$columns")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$i")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 13.@each 无序循环语句")]),t._v("\n"),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$if_color")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("rgb")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0, 153, 255"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$icons")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" success info error"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$each_width")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token selector"}},[t._v("section.s13 ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v("height")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v("background-color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$if_color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token selector"}},[t._v("div ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("@each")]),t._v(" "),a("span",{attrs:{class:"token selector"}},[a("span",{attrs:{class:"token variable"}},[t._v("$icon")]),t._v(" in "),a("span",{attrs:{class:"token variable"}},[t._v("$icons")]),t._v(" ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token selector"}},[t._v(".icon-"),a("span",{attrs:{class:"token variable"}},[t._v("#{$icon}")]),t._v(" ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("height")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$each_width")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("width")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$each_width")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("display")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-block"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("background")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token url"}},[t._v("url")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"../img/#{$icon}.png"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" no-repeat 0 0"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("background-size")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$each_width")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$each_width")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 14.while 条件循环")]),t._v("\n"),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$while_color")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("rgb")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("212, 0, 255"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$item")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 6"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token selector"}},[t._v("section.s14 ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v("height")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50px"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v("background-color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$while_color")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token selector"}},[t._v("div ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("@while")]),t._v(" "),a("span",{attrs:{class:"token selector"}},[a("span",{attrs:{class:"token variable"}},[t._v("$item")]),t._v(" > 0 ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token selector"}},[t._v(".item-"),a("span",{attrs:{class:"token variable"}},[t._v("#{$item}")]),t._v(" ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v("width")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5px "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$item")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[a("span",{attrs:{class:"token variable"}},[t._v("$item")])]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$item")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" 2"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])}],!1,null,null,null);s.default=o.exports}}]);